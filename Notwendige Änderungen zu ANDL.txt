# Notwendige Änderungen zu ANDL für SOQOSMW Kompaibilität #
-----------------------------------------------------------

###########################################
############# GWSourceAppBase #############
###########################################

-------------------------------------------
- ANDL: inline ini code für das 'gateway' -
-------------------------------------------
...

gateway GatewayLicht {
    inline ini config General {
```
**.GatewayLicht.localAddress = "GatewayLicht"
**.GatewayLicht.numServices = 1
**.GatewayLicht.services[0].typename = "GWSourceAppBase"
**.GatewayLicht.services[0].serviceName = "ScheinwerferPublisher"
**.GatewayLicht.services[0].streamID = 47
**.GatewayLicht.services[0].canIds = "100"
**.GatewayLicht.services[0].applicationTCPPort = 5464
**.GatewayLicht.services[0].applicationUDPPort = 5464
**.GatewayLicht.networkLayer.ip.filters = xmldoc("rtIpConfig.xml", "/rtIpConfig/node[@id='GatewayLicht']")
```
    }
}

...

-------------------------------------------------
- NED: Import für SOQoSMWGatewayHost hinzufügen -
-------------------------------------------------
import soqosmw.nodes.SOQoSMWGatewayHost;

-----------------------------------------------------
- NED: Gateway mit SOQoSMWGatewayHost instanziieren -
-----------------------------------------------------
GatewayLicht: SOQoSMWGatewayHost

----------------------------------------------
- NED: Gateway ethernet gate ist kein Vektor -
----------------------------------------------
     GatewayLicht.ethg[0]
---> GatewayLicht.ethg

-----------------------------------------
- GATEWAY.INI: Mehrere Änderungen, s.u. -
-----------------------------------------
MAC Adresse: **.GatewayLicht.tte[0].phy[0].mac.address = "67-75-2F-39-50-FD"
        ---> **.GatewayLicht.phy[0].mac.address = "67-75-2F-39-50-FD"

Zeilen entfernen: **.GatewayLicht.tte[0].numberOfRC_Vlinks = 0
                  **.GatewayLicht.tte[0].numberOfTT_Vlinks = 0
                  **.GatewayLicht.tte[0].bgIn.destination_gates = "gatewayApp.in"
                  **.GatewayLicht.tte[0].gatewayApp.buffers = "bgOut"

---------------------------------------
- GATEWAY.XML: transformation Element -
---------------------------------------
        <transformation destination="1" type="toEthernet">
            <ethernetframe dst="D5-96-08-08-B1-DF">
                <canframe canId="100"/>
            </ethernetframe>
        </transformation>

--->    <transformation destination="1" type="toMisc">
            <rawdata id="100">
                <canframe canId="100"/>
            </rawdata>
        </transformation>

------------------------------------------------------------
- SERVICES.XML: Knoten und Hosts in services.xml eintragen -
------------------------------------------------------------
<services>
  <service name="ScheinwerferPublisher" node="GatewayLicht" />
</services>

----------------------------------------------
- RTIPCONFIG.XML: Knoten und Hosts eintragen -
----------------------------------------------
<rtIpConfig>
  <node id="GatewayLicht">
  </node>
</rtIpConfig>

-----------------------------------------------
- GATEWAY.NED: ned files der Gateways löschen -
-----------------------------------------------
Die ned files der Gateways werden nicht gebraucht.


###########################################
############## GWSinkAppBase ##############
###########################################

-------------------------------------------
- ANDL: inline ini code für das 'gateway' -
-------------------------------------------
...

gateway GatewaySteuerung {
      inline ini config General {
```
**.GatewaySteuerung.localAddress = "GatewaySteuerung"
**.GatewaySteuerung.numServices = 1
**.GatewaySteuerung.services[0].typename = "GWSinkAppBase"
**.GatewaySteuerung.services[0].subscriberName = "ScheinwerferSubscriber"
**.GatewaySteuerung.services[0].publisherName = "ScheinwerferPublisher"
**.GatewaySteuerung.services[0].qosGroup = "RT"
**.GatewaySteuerung.services[0].applicationTCPPort = 7346
**.GatewaySteuerung.services[0].applicationUDPPort = 7346
**.GatewaySteuerung.networkLayer.ip.filters = xmldoc("rtIpConfig.xml", "/rtIpConfig/node[@id='GatewaySteuerung']")
```
        }
}

...

-------------------------------------------------
- NED: Import für SOQoSMWGatewayHost hinzufügen -
-------------------------------------------------
import soqosmw.nodes.SOQoSMWGatewayHost;

-----------------------------------------------------
- NED: Gateway mit SOQoSMWGatewayHost instanziieren -
-----------------------------------------------------
GatewaySteuerung: SOQoSMWGatewayHost

----------------------------------------------
- NED: Gateway ethernet gate ist kein Vektor -
----------------------------------------------
     GatewaySteuerung.ethg[0]
---> GatewaySteuerung.ethg

-----------------------------------------
- GATEWAY.INI: Mehrere Änderungen, s.u. -
-----------------------------------------
MAC Adresse: **.GatewaySteuerung.tte[0].phy[0].mac.address = "4F-34-99-2E-66-36"
        ---> **.GatewaySteuerung.phy[0].mac.address = "4F-34-99-2E-66-36"

Zeilen entfernen: **.GatewaySteuerung.tte[0].numberOfRC_Vlinks = 0
                  **.GatewaySteuerung.tte[0].numberOfTT_Vlinks = 0
                  **.GatewaySteuerung.tte[0].bgIn.destination_gates = "gatewayApp.in"
                  **.GatewaySteuerung.tte[0].gatewayApp.buffers = "bgOut"

------------------------------------------
- GATEWAY.XML: Mehrere Änderungen (s.u.) -
------------------------------------------
      <routing>
        <route source="1" destination="0">
          <ethernetframe dst="4F-34-99-2E-66-36"/>
        </route>
      </routing>

--->  <routing>
        <route source="2" destination="0">
          <avbframe streamId="47"/>
        </route>
      </routing>
...
      <transformation destination="0" type="toCan">
        <ethernetframe dst="4F-34-99-2E-66-36"/>
      </transformation>

--->  <transformation destination="0" type="toCan">
        <avbframe streamId="47"/>
      </transformation>

------------------------------------------------------------
- SERVICES.XML: Knoten und Hosts in services.xml eintragen -
------------------------------------------------------------
<services>
  <service name="ScheinwerferSubscriber" node="GatewaySteuerung" />
</services>

----------------------------------------------
- RTIPCONFIG.XML: Knoten und Hosts eintragen -
----------------------------------------------
<rtIpConfig>
  <node id="GatewaySteuerung">
  </node>
</rtIpConfig>

-----------------------------------------------
- GATEWAY.NED: ned files der Gateways löschen -
-----------------------------------------------
Die ned files der Gateways werden nicht gebraucht.

###########################################
################ Allgemein ################
###########################################

-------------------------------------------
- NED: IPv4NetworkConfigurator hinzufügen -
-------------------------------------------
import inet.networklayer.configurator.ipv4.IPv4NetworkConfigurator;

configurator: IPv4NetworkConfigurator {
}

###########################################
############ SubscriberAppBase ############
###########################################

----------------------------------------
- ANDL: inline ini code für eth 'node' -
----------------------------------------
...
node Infotainment { 
  inline ini config General {
```
**.Infotainment.localAddress = "Infotainment"
**.Infotainment.numServices = 1
**.Infotainment.services[0].typename = "SubscriberAppBase"
**.Infotainment.services[0].subscriberName = "Infotainment"
**.Infotainment.services[0].publisherName = "ScheinwerferPublisher"
**.Infotainment.services[0].qosGroup = "STD_UDP"
**.Infotainment.services[0].applicationTCPPort = 7454
**.Infotainment.services[0].applicationUDPPort = 7454
**.Infotainment.networkLayer.ip.filters = xmldoc("rtIpConfig.xml", "/rtIpConfig/node[@id='Infotainment']")
```         
        }
}
...

------------------------------------------
- NED: Import für SOQoSMWHost hinzufügen -
------------------------------------------
import soqosmw.nodes.SOQoSMWHost;

----------------------------------------------
- NED: Gateway mit SOQoSMWHost instanziieren -
----------------------------------------------
Infotainment: SOQoSMWHost

----------------------------------------------
- RTIPCONFIG.XML: Knoten und Hosts eintragen -
----------------------------------------------
<node id="Infotainment">
</node>

------------------------------------------------------------
- SERVICES.XML: Knoten und Hosts in services.xml eintragen -
------------------------------------------------------------
<service name="Infotainment" node="Infotainment" />

-------------------------------------------
- SUBSCRIBERAPPBASE.NED: ned file löschen -
-------------------------------------------
Das ned file der SubscriberAppBase löschen

##########################################
############ PublisherAppBase ############
##########################################

----------------------------------------
- ANDL: inline ini code für eth 'node' -
----------------------------------------
...
node Radio {
      inline ini config General { 
```
**.Radio.localAddress = "MotortemperaturePublisher"
**.Radio.numServices = 1
**.Radio.services[0].typename = "PublisherAppBase"
**.Radio.services[0].serviceName = "Motortemperature"
**.Radio.services[0].streamID = 42
**.Radio.services[0].applicationTCPPort = 4391
**.Radio.services[0].applicationUDPPort = 4391
**.Radio.networkLayer.ip.filters = xmldoc("rtIpConfig.xml", "/rtIpConfig/node[@id='Radio']")
```
        }
    }
...

------------------------------------------
- NED: Import für SOQoSMWHost hinzufügen -
------------------------------------------
import soqosmw.nodes.SOQoSMWHost;

----------------------------------------------
- NED: Gateway mit SOQoSMWHost instanziieren -
----------------------------------------------
Radio: SOQoSMWHost

----------------------------------------------
- RTIPCONFIG.XML: Knoten und Hosts eintragen -
----------------------------------------------
<node id="Radio">
</node>

------------------------------------------------------------
- SERVICES.XML: Knoten und Hosts in services.xml eintragen -
------------------------------------------------------------
<service name="Radio" node="Radio" />

-------------------------------------------
- PUBLISHERAPPBASE.NED: ned file löschen -
-------------------------------------------
Das ned file der PublisherAppBase löschen


##########################################
############### Generierung ##############
##########################################

In der ini kann **.networkLayer.ip.filters = xmldoc("rtIpConfig.xml", "/rtIpConfig/")
geschrieben werden, wodurch das Eintragen des nodes in die rtIpConfig entfällt.