//
// Generated file, do not edit! Created by nedtool 5.1 from soqosmw/messages/Envelope.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __SOQOSMW_ENVELOPE_M_H
#define __SOQOSMW_ENVELOPE_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0501
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif

// cplusplus {{
#include "soqosmw/base/EndpointDescription.h"
// }}


namespace soqosmw {

/**
 * Enum generated from <tt>soqosmw/messages/Envelope.msg:24</tt> by nedtool.
 * <pre>
 * enum SOQoSMWProtocols
 * {
 * 
 *     QOSNEGOTIATIONPROTOCOL = 0;
 * }
 * </pre>
 */
enum SOQoSMWProtocols {
    QOSNEGOTIATIONPROTOCOL = 0
};

/**
 * Class generated from <tt>soqosmw/messages/Envelope.msg:31</tt> by nedtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * packet Envelope
 * {
 *     int protocol \@enum(SOQoSMWProtocols); //indicates the type of message for better casting and correct forwarding.
 *     EndpointDescription receiver; //contains information about the receiver of the message.
 *     EndpointDescription sender; //contains information about the sender of the message.
 * }
 * </pre>
 */
class Envelope : public ::omnetpp::cPacket
{
  protected:
    int protocol;
    EndpointDescription receiver;
    EndpointDescription sender;

  private:
    void copy(const Envelope& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Envelope&);

  public:
    Envelope(const char *name=nullptr, short kind=0);
    Envelope(const Envelope& other);
    virtual ~Envelope();
    Envelope& operator=(const Envelope& other);
    virtual Envelope *dup() const override {return new Envelope(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getProtocol() const;
    virtual void setProtocol(int protocol);
    virtual EndpointDescription& getReceiver();
    virtual const EndpointDescription& getReceiver() const {return const_cast<Envelope*>(this)->getReceiver();}
    virtual void setReceiver(const EndpointDescription& receiver);
    virtual EndpointDescription& getSender();
    virtual const EndpointDescription& getSender() const {return const_cast<Envelope*>(this)->getSender();}
    virtual void setSender(const EndpointDescription& sender);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const Envelope& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, Envelope& obj) {obj.parsimUnpack(b);}

} // namespace soqosmw

#endif // ifndef __SOQOSMW_ENVELOPE_M_H

