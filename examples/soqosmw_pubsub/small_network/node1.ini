[General]
network = small_network

**.node1.tteavbEtherNic.mac.address = "0A-00-00-00-00-01"

**.node1.localAddress = "node1"

**.node1.numServices = 1
**.node1.services[0].typename = "PublisherAppBase"
**.node1.services[0].streamID = 47
**.node1.services[0].qosPolicies = ""


#RTConfig
**.node1.networkLayer.ip.filters = xmldoc("rtIpConfig.xml", "/rtIpConfig/node[@id='node1']")


# Connect the output vl_101 to the physical port phy[0].
**.node1.vl_100.destination_gates = "phy[0].RCin"
**.node1.vl_100.bag = sec_to_tick(900us)
**.node1.vl_100.priority = 0
**.node1.vl_100.ct_id = 100
**.node1.vl_100.ct_marker = 0
**.node1.vl_100.ct_mask = 0

**.node1.vl_101_ctc.receive_window_start = sec_to_tick(970us)
**.node1.vl_101_ctc.receive_window_end = sec_to_tick(990us)
**.node1.vl_101_ctc.permanence_pit = sec_to_tick(990us)
# Connect buffer of vl_100 to phy[0]
**.node1.vl_101.destination_gates = "phy[0].TTin"
**.node1.vl_101.ct_id = 100
**.node1.vl_101.sendWindowStart = sec_to_tick(1000us)
**.node1.vl_101.ct_marker = 0
**.node1.vl_101.ct_mask = 0

**.node1.phy[0].shaper.tt_buffers = "vl_101"
**.node1.phy[0].inControl.ct_marker = 0
**.node1.phy[0].inControl.ct_mask = 0



